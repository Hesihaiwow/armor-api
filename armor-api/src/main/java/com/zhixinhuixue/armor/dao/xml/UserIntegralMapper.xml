<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYUserIntegralMapper">
  <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.UserIntegral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="origin" jdbcType="INTEGER" property="origin" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="integral" jdbcType="DECIMAL" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="review_status" jdbcType="INTEGER" property="reviewStatus" />
  </resultMap>

  <resultMap id="BaseMap" type="com.zhixinhuixue.armor.model.bo.UserIntegralInfoBO" extends="BaseResultMap">
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
  </resultMap>

  <resultMap id="IntegralHistory" type="com.zhixinhuixue.armor.model.bo.UserIntegralHistoryBO" extends="BaseResultMap">
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="task_hours" jdbcType="INTEGER" property="taskHours" />
    <result column="id" jdbcType="BIGINT" property="id" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_id, user_id, integral, create_time
  </sql>
  <!--查询查询积分列表 通过积分排列-->
  <select id="getIntegralPage" parameterType="Map"  resultMap="BaseMap">
    SELECT (@rowid := @rowid+1) AS id,integral,name,user_id FROM(
    SELECT sum(case when (i.review_status!=1  or i.review_status is null) then i.integral else 0 end) as integral, u.name, i.user_id
    FROM user_integral i,`user` u
    LEFT JOIN department d on u.department_id = d.id
    <where>
      i.user_id = u.id AND d.parent_id =#{departmentId}
      <if test="startTime!=null and startTime!=''">
      <![CDATA[AND i.create_time >= #{startTime}]]>
      </if>
      <if test="endTime!=null and endTime!=''" >
        <![CDATA[AND i.create_time <#{endTime}]]>
      </if>
    </where>
      GROUP BY i.user_id
      ORDER BY integral DESC)as a,
    (SELECT (@rowid:=0))as b
  </select>
  <!--查询个人时段积分-->
  <select id="getUserIntegral" parameterType="String"  resultType="java.lang.Integer">
    SELECT  IFNULL(sum(integral),0) FROM user_integral
    <where>
      user_id = #{id,jdbcType=BIGINT}
        AND (review_status!=1 OR review_status is null)
        <![CDATA[AND create_time > #{startTime,jdbcType=TIMESTAMP}
                  AND create_time < #{endTime,jdbcType=TIMESTAMP}]]>
    </where>
  </select>
  <!--查询用户积分历史-->
  <select id="getIntegralHistory" parameterType="Map"  resultMap="IntegralHistory">
    SELECT t1.* ,t2.grade   from
    (SELECT i.integral, u.name, i.origin, i.create_time, i.task_id, i.description, t.type, h.task_hours, h.id
    FROM user_integral i
    LEFT JOIN `user` u ON i.user_id = u.id
    LEFT JOIN task t ON i.task_id = t.id
    LEFT JOIN task_user h ON i.task_id = h.task_id AND h.user_id = i.user_id
    <where>
          i.user_id = #{id,jdbcType=BIGINT}  AND (i.review_status != 1  or i.review_status is null)
        <if test="startTime!=null and startTime!=''">
          <![CDATA[AND i.create_time >= #{startTime}]]>
        </if>
        <if test="endTime!=null and endTime!=''" >
          <![CDATA[AND i.create_time <#{endTime}]]>
        </if>
    </where>
    GROUP BY i.id
    ORDER BY i.create_time DESC) t1
    LEFT JOIN
    (SELECT task_user_id,AVG(integral)as grade FROM task_comment GROUP BY task_user_id) t2
    on t1.id = t2.task_user_id
  </select>
  <select id="getIntegralCount" resultType="java.lang.Integer">
    SELECT COUNT(*) From user_integral i
    LEFT JOIN `user` u on u.id = i.user_id
    LEFT JOIN department d on u.department_id = d.id
    WHERE d.parent_id =#{departmentId} AND
    <if test="startTime!=null and startTime!=''">
      <![CDATA[ i.create_time >= #{startTime}]]>
    </if>
    <if test="endTime!=null and endTime!=''" >
      <![CDATA[  i.create_time <=#{endTime}]]>
    </if>
  </select>
  <!--查询排名-->
  <select id="getRank" resultType="java.lang.Integer">
    SELECT  id from(
    SELECT (@rowid := @rowid+1) AS id,integral,name,user_id FROM(
        SELECT sum(i.integral) as integral, u.name, i.user_id
        FROM user_integral i,`user` u
        LEFT JOIN department d on d.id = u.department_id
        WHERE   i.user_id = u.id AND d.parent_id= #{departmentId} AND (i.review_status != 1  or i.review_status is null)
        <![CDATA[ AND i.create_time > #{startTime,jdbcType=TIMESTAMP} AND i.create_time < #{endTime,jdbcType=TIMESTAMP}]]>
          GROUP BY i.user_id
          ORDER BY integral DESC)as a,
        (SELECT (@rowid:=0))as b )as c
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <!-- 根据审核状态查询转移积分-->
  <select id="getIntegralByReviewStatus" parameterType="Map" resultMap="BaseMap">
    SELECT a.id, a.user_id, a.create_time, a.description, a.integral, u.avatar_url, CONCAT(a.name, ",", u.name)
    AS name FROM (
    SELECT i.id, i.user_id, i.create_time, i.description, i.integral, u.name ,i.create_by
    FROM user_integral i, `user` u
    WHERE i.review_status = #{status,jdbcType=INTEGER}
    AND u.id = i.user_id
    <if test="userId!=null">
     AND i.create_by =#{userId,jdbcType=BIGINT}
    </if>
    ) a JOIN user u
    on u.id = a.create_by
    LEFT JOIN department d on u.department_id = d.id
    where d.parent_id = #{departmentId,jdbcType=BIGINT}
  </select>

  <insert id="insert" parameterType="com.zhixinhuixue.armor.model.pojo.UserIntegral">
    insert into user_integral (id, task_id, user_id,
    integral, create_time, origin,
    create_by, description, review_status)
    values (#{id,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
    #{integral,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{origin,jdbcType=INTEGER},
    #{createBy,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{reviewStatus,jdbcType=INTEGER})
  </insert>
  <!-- 删除积分 -->
  <delete id="deleteUserIntegral">
    delete from user_integral where task_id=#{taskId} and user_id = #{userId}
  </delete>

  <!--获取积分求助转移详情 -->
  <select id="getHelpDetail" resultMap="BaseResultMap">
    SELECT * FROM user_integral i WHERE i.id = #{id}
  </select>
  <!--删除积分求助转移 -->
  <delete id="deleteIntegralById">
    DELETE  FROM user_integral WHERE id = #{id}
  </delete>
  <!--编辑积分求助转移 -->
  <update id="updateIntegralById">
    UPDATE user_integral
    SET  task_id= #{taskId,jdbcType=BIGINT}, user_id= #{userId,jdbcType=BIGINT},
      integral= #{integral,jdbcType=DECIMAL},description= #{description,jdbcType=VARCHAR}, create_time= #{createTime,jdbcType=TIMESTAMP}
    WHERE id=#{id,jdbcType=BIGINT};
  </update>

  <!--审核积分通过 -->
  <update id="updateReview">
    UPDATE user_integral
    SET  review_status= 3
    WHERE id=#{id,jdbcType=BIGINT};
  </update>

</mapper>