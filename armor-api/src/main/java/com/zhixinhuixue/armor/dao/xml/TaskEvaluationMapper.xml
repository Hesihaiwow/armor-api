<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYTaskEvaluationMapper">
    <resultMap id="BaseMap" type="com.zhixinhuixue.armor.model.pojo.TaskEvaluation">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="task_user_id" property="taskUserId" jdbcType="BIGINT"/>
        <result column="score" property="score" jdbcType="DECIMAL"/>
        <result column="evaluation_option" property="evaluationOption" jdbcType="INTEGER"/>
        <result column="integral" property="integral" jdbcType="INTEGER"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="evaluate_user_id" property="evaluateUserId" jdbcType="BIGINT"/>
        <result column="evaluate_time" property="evaluateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="EvaluationBOMap" type="com.zhixinhuixue.armor.model.bo.EvaluationBO">
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="task_user_id" property="taskUserId" jdbcType="BIGINT"/>
        <result column="task_user_name" property="taskUserName" jdbcType="BIGINT"/>
        <result column="evaluate_user_name" property="evaluateUserName" jdbcType="BIGINT"/>
        <result column="evaluate_user_id" property="evaluateUserId" jdbcType="BIGINT"/>
        <result column="evaluate_time" property="evaluateTime" jdbcType="TIMESTAMP"/>
        <collection property="evaluationScoreBOS" column="{taskId = task_id,userId = task_user_id,evaluateUserId=evaluate_user_id}"
                    ofType="com.zhixinhuixue.armor.model.bo.EvaluationScoreBO"
                    select="selectByTaskAndTaskUser"/>
    </resultMap>

    <resultMap id="EvaluationScoreBOMap" type="com.zhixinhuixue.armor.model.bo.EvaluationScoreBO">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="score" property="score" jdbcType="DECIMAL"/>
        <result column="evaluation_option" property="evaluationOption" jdbcType="INTEGER"/>
        <result column="integral" property="integral" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="EvaluationPageBOMap" type="com.zhixinhuixue.armor.model.bo.TaskEvaluationPageBO">
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="job_role" property="jobRole" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="TaskBaseBOMap" type="com.zhixinhuixue.armor.model.bo.TaskBaseBO">
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="OptionScoreBOMap" type="com.zhixinhuixue.armor.model.bo.OptionScoreBO">
        <result column="option" property="option" jdbcType="INTEGER"/>
        <result column="total_score" property="totalScore" jdbcType="DECIMAL"/>
    </resultMap>

    <resultMap id="PersonTotalEvaMap" type="com.zhixinhuixue.armor.model.bo.PersonTotalEvaBO">
        <result column="total_score" property="totalScore" jdbcType="DECIMAL"/>
        <result column="option" property="option" jdbcType="INTEGER"/>
        <result column="times" property="times" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="TotalMap" type="com.zhixinhuixue.armor.model.bo.TaskEvaluationScoreAndNumBO">
        <result column="total_score" property="totalScore" jdbcType="DECIMAL"/>
        <result column="total_num" property="totalNum" jdbcType="INTEGER"/>
    </resultMap>
    <!--批量插入任务评价-->
    <insert id="insertBatch" parameterType="com.zhixinhuixue.armor.model.pojo.TaskEvaluation">
        INSERT INTO `task_evaluation`
        (`id`,`task_id`,`task_user_id`,`score`,`evaluation_option`,`integral`,`comment`,`evaluate_user_id`,`evaluate_time`)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT},#{item.taskId,jdbcType=BIGINT},#{item.taskUserId,jdbcType=BIGINT}
            ,#{item.score,jdbcType=DECIMAL},#{item.evaluationOption,jdbcType=INTEGER},#{item.integral,jdbcType=INTEGER}
            ,#{item.comment,jdbcType=VARCHAR},#{item.evaluateUserId,jdbcType=BIGINT},#{item.evaluateTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <!--根据任务查询已经评价的用户-->
    <select id="selectEvaluatedUsersByTask" resultType="java.lang.Long">
        SELECT DISTINCT `evaluate_user_id` FROM `task_evaluation` WHERE `task_id` = #{taskId}
    </select>

    <!--根据任务和用户查询评价-->
    <select id="selectByTaskAndUser" resultMap="EvaluationBOMap">
        SELECT `task_id`,`task_user_id`,`evaluate_user_id`,`evaluate_time`
        FROM `task_evaluation` WHERE `task_id` = #{taskId} AND `evaluate_user_id` = #{userId}
        GROUP BY `evaluate_user_id`
    </select>

    <!--根据任务和被评价用户查询-->
    <select id="selectByTaskAndTaskUser" resultMap="EvaluationScoreBOMap">
        SELECT `id`,`score`,`evaluation_option`,`integral`
        FROM `task_evaluation` WHERE
        `task_id` = #{taskId}
        AND `task_user_id` = #{userId}
        <if test="evaluateUserId != null">
            AND `evaluate_user_id` = #{evaluateUserId}
        </if>
    </select>
    <select id="selectWaitEvaluatedByUser">
        SELECT t.id FROM `task` t
        LEFT JOIN task_user tu on t.id = tu.task_id
        WHERE t.review_status = 3 AND t.is_delete = 0 AND t.`status` = 2
        AND tu.user_id = #{userId}
    </select>

    <!--根据用户查询已经评价的任务-->
    <select id="selectEvaluatedTaskIdsByUser" resultType="java.lang.Long">
        SELECT task_id FROM task_evaluation WHERE evaluate_user_id = #{userId} GROUP BY task_id
    </select>

    <!--分页根据用户查询已经评价的任务-->
    <select id="selectEvaluatedTaskIdsByUserPage" resultType="java.lang.Long">
        SELECT task_id FROM task_evaluation WHERE evaluate_user_id = #{userId} GROUP BY task_id ORDER BY `evaluate_time` DESC
    </select>

    <!--查看某个人对当前用户的评价-->
    <select id="selectSomeoneToMe" resultMap="EvaluationBOMap">
        SELECT te.`task_id`,te.`task_user_id`,te.`evaluate_user_id`,te.`evaluate_time`,u1.name task_user_name,u2.name evaluate_user_name
        FROM `task_evaluation` te
        LEFT JOIN `user` u1 ON u1.id = te.task_user_id
        LEFT JOIN `user` u2 ON u2.id = te.evaluate_user_id
        WHERE te.`task_id` = #{taskId} AND te.`task_user_id` = #{userId}
        AND te.`evaluate_user_id` = #{evaluateUserId}
        GROUP BY `task_user_id`
    </select>

    <!--查看某人都其他用户的评价-->
    <select id="selectMeToOthers" resultMap="EvaluationBOMap">
        SELECT `task_id`,`task_user_id`,`evaluate_user_id`,`evaluate_time`
        FROM `task_evaluation`
        WHERE `task_id` = #{taskId} AND `evaluate_user_id` = #{evaluateUserId}
        GROUP BY `task_user_id`
    </select>

    <!--管理员查看其他人对某个人的评价-->
    <select id="selectOthersToMe" resultMap="EvaluationBOMap">
        SELECT te.`task_id`,te.`task_user_id`,te.`evaluate_user_id`,te.`evaluate_time`,u1.name task_user_name,u2.name evaluate_user_name
        FROM `task_evaluation` te
        LEFT JOIN `user` u1 ON u1.id = te.task_user_id
        LEFT JOIN `user` u2 ON u2.id = te.evaluate_user_id
        WHERE te.`task_id` = #{taskId} AND te.`task_user_id` = #{taskUserId}
        GROUP BY `evaluate_user_id`
    </select>

    <!--管理员分页查看用户所有任务综合评价-->
    <select id="selectUserAvgEvaluation" parameterType="com.zhixinhuixue.armor.model.dto.request.EvaluationPageQueryReqDTO"
                resultMap="EvaluationPageBOMap">
        SELECT u.id user_id,u.name user_name,u.job_role job_role
        FROM task_evaluation tev1
        LEFT JOIN user u on u.id = tev1.task_user_id
        LEFT JOIN task t on t.id = tev1.task_id
        WHERE u.is_delete = 0 AND u.status = 0 AND t.is_delete = 0 AND t.review_status = 3 AND t.status = 3 AND t.type = 2
        <if test="reqDTO.taskUserId != null">
            AND tev1.task_user_id = #{reqDTO.taskUserId}
        </if>
        GROUP BY tev1.task_user_id
    </select>

    <select id="selectTaskNumByTaskUser" resultType="java.lang.Integer">
        SELECT IFNULL(COUNT(id),0) FROM
        (SELECT * FROM task_evaluation WHERE task_user_id = #{userId}
        AND task_id in
        <foreach collection="taskIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        GROUP BY task_id) t1
    </select>

    <!--查询任务-->
    <select id="selectTaskBaseInfoByTaskUser" resultMap="TaskBaseBOMap">
        SELECT t.id task_id,t.name task_name FROM task_evaluation tev
        LEFT JOIN task t on tev.task_id = t.id
        WHERE tev.task_user_id = #{userId} AND t.status = 3
        <if test="reqDTO.beginTime != null">
            <![CDATA[  AND  t.`complete_time` >= #{reqDTO.beginTime} ]]>
        </if>
        <if test="reqDTO.endTime != null">
            <![CDATA[  AND  t.`complete_time` <= #{reqDTO.endTime} ]]>
        </if>
        GROUP BY tev.task_id
        ORDER BY t.complete_time DESC
    </select>

    <!--查询各项得分-->
    <select id="selectOptionScoreByTaskUser" resultMap="OptionScoreBOMap">
        SELECT sum(score) total_score,evaluation_option 'option'
        FROM task_evaluation WHERE task_user_id = #{userId} AND task_id in
        <foreach collection="taskIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        GROUP BY evaluation_option;
    </select>

    <select id="selectEvaluationNumByTaskUser" resultType="java.lang.Integer">
        SELECT IFNULL(COUNT(*),0) evaluation_num FROM task_evaluation WHERE task_user_id = #{userId}
        AND task_id in
        <foreach collection="taskIds" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <!--根据用户 和 时间  查询  阶段的评价-->
    <select id="selectPersonalTotalEva" resultMap="PersonTotalEvaMap">
        SELECT ifnull(sum(score),0) total_score,evaluation_option `option`,count(id) times FROM task_evaluation WHERE task_user_id = #{userId}
        <![CDATA[  AND  `evaluate_time` >= #{beginTime} ]]>
        <![CDATA[  AND  `evaluate_time` <= #{endTime} ]]>
        GROUP BY evaluation_option
    </select>

    <!--查询任务的总评价得分和总评价次数-->
    <select id="selectTotalScoreAndNum" resultMap="TotalMap">
        SELECT IFNULL(SUM(score),0) total_score,COUNT(*) total_num FROM task_evaluation
        WHERE task_id = #{taskId} AND task_user_id = #{userId}
    </select>

    <!--查询当前用户当前任务的所有评价-->
    <select id="selectListByTaskAndUser" resultMap="BaseMap">
        SELECT * FROM task_evaluation WHERE task_id = #{taskId} AND task_user_id = #{userId};
    </select>
</mapper>