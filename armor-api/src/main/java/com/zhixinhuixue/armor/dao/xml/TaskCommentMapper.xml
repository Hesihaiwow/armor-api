<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYTaskCommentMapper">
  <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.TaskComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="task_user_id" jdbcType="BIGINT" property="taskUserId" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
  </resultMap>

  <sql id="Base_Column_List">
    id, task_id, task_user_id, grade, integral, description, create_time, create_by
  </sql>

  <resultMap id="TaskUserCommentResultMap" type="com.zhixinhuixue.armor.model.bo.TaskCommentBO" extends="BaseResultMap">
    <result column="commentUserName" jdbcType="VARCHAR" property="commentUserName" />
  </resultMap>

  <delete id="deleteByTaskId" parameterType="java.lang.Long">
    delete from task_comment where task_id = #{taskId}
  </delete>

  <!-- 根据task_user_id查询 -->
  <select id="selectByTaskUserId" parameterType="java.lang.Long" resultMap="TaskUserCommentResultMap">
    select t1.*,t2.`name` as commentUserName from task_comment t1
    left join `user` t2 on t1.create_by = t2.id
    where task_user_id = #{id}
  </select>

  <!-- 批量插入 -->
  <insert id="insertList" parameterType="java.util.List">
    insert into task_comment (id, task_id, task_user_id,
      grade, integral, description,
      create_time, create_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.taskId,jdbcType=BIGINT}, #{item.taskUserId,jdbcType=BIGINT},
      #{item.grade,jdbcType=VARCHAR}, #{item.integral,jdbcType=INTEGER}, #{item.description,jdbcType=VARCHAR},
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT})
    </foreach>
  </insert>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhixinhuixue.armor.model.pojo.TaskComment">
    insert into task_comment (id, task_id, task_user_id, 
      grade, integral, description, 
      create_time, create_by)
    values (#{id,jdbcType=BIGINT}, #{taskId,jdbcType=BIGINT}, #{taskUserId,jdbcType=BIGINT}, 
      #{grade,jdbcType=VARCHAR}, #{integral,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zhixinhuixue.armor.model.pojo.TaskComment">
    insert into task_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskUserId != null">
        task_user_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskUserId != null">
        #{taskUserId,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhixinhuixue.armor.model.pojo.TaskComment">
    update task_comment
    <set>
      <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="taskUserId != null">
        task_user_id = #{taskUserId,jdbcType=BIGINT},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhixinhuixue.armor.model.pojo.TaskComment">
    update task_comment
    set task_id = #{taskId,jdbcType=BIGINT},
      task_user_id = #{taskUserId,jdbcType=BIGINT},
      grade = #{grade,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>