<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYStageMapper">
  <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.Stage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="sort" jdbcType="BIGINT" property="sort" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, create_time, create_by, sort, department_id
  </sql>

  <resultMap id="BaseMap" type="com.zhixinhuixue.armor.model.dto.response.StageResDTO" extends="BaseResultMap">
    <result column="num" jdbcType="INTEGER" property="num" />
    <association column="department_id" property="firstId" jdbcType="BIGINT" select="getFirstId"/>
    <association column="department_id" property="lastId" jdbcType="BIGINT" select="getLastId"/>
  </resultMap>

  <select id="selectStage" resultMap="BaseMap">
    SELECT (@rowid := @rowid+1) AS num, a.id, a.name,a.department_id  FROM(
        SELECT *  FROM stage WHERE department_id = #{id}
      ORDER BY sort ASC)as a,
    (SELECT (@rowid:=0))as b
  </select>
  <delete id="deleteStage" parameterType="java.lang.Long">
    delete from stage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhixinhuixue.armor.model.pojo.Stage">
    insert into stage (id, name, create_time, 
      create_by, sort,department_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{sort,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT})
  </insert>

    <update id="update">
        UPDATE stage
          SET  name= #{name,jdbcType=VARCHAR}, sort= #{sort,jdbcType=BIGINT}
        WHERE id=#{id,jdbcType=BIGINT};
    </update>

  <!--验证阶段名,优先级是否存在-->
  <select id="validateStage" parameterType="java.util.Map" resultType="java.lang.Integer">
    SELECT count(*) FROM stage  WHERE department_id = #{departmentId} and name = #{name,jdbcType=VARCHAR}
  </select>

  <!-- 根据ID查询阶段 -->
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List" />
    from stage where id = #{id}
  </select>

    <!-- 查询阶段ID是否被使用 -->
    <select id="countStage" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT count(*) from task_user,task where  task.is_delete=0 and
        (task_user.stage_id = #{id,jdbcType=BIGINT} or task.stage_id =#{id,jdbcType=BIGINT})
    </select>
  <!-- 更新优先级-->
  <update id="updateSortById">
    UPDATE stage SET sort = sort +1
        WHERE id != #{id,jdbcType=BIGINT}  and sort >= #{sort,jdbcType=BIGINT}
  </update>

  <!--查询排序目标上一个阶段的优先级-->
  <select id="selectBySort" resultType="java.lang.Long">
    SELECT sort FROM stage ORDER BY sort limit #{sort},1
  </select>

  <select id="selectByDeptId" resultMap="BaseResultMap">
    SELECT * FROM stage WHERE department_id=#{id}
    ORDER BY sort
  </select>

  <select id="getFirstId" resultType="java.lang.Long">
    SELECT id FROM stage WHERE department_id=#{departmentId}
    ORDER BY sort ASC limit 1
  </select>

  <select id="getLastId" resultType="java.lang.Long">
    SELECT id FROM stage WHERE department_id=#{departmentId}
    ORDER BY sort DESC limit 1
  </select>
</mapper>