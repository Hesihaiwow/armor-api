<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYTaskMapper">
    <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.Task">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
        <result column="doc" jdbcType="LONGVARCHAR" property="doc"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>
        <result column="stage_id" jdbcType="BIGINT" property="stageId"/>
        <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime"/>
        <result column="test_time" jdbcType="TIMESTAMP" property="testTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="review_status" jdbcType="INTEGER" property="reviewStatus"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="facility" jdbcType="INTEGER" property="facility"/>
        <result column="examine" jdbcType="INTEGER" property="examine"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, description, project_id,stage_id, begin_time, test_time, end_time, `type`, status, review_status, priority, create_by,
        complete_time, create_time, update_time, sort, facility, examine
    </sql>

    <resultMap id="PageResultMap" type="com.zhixinhuixue.armor.model.bo.TaskListBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <result column="projectImage" jdbcType="VARCHAR" property="projectImage"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="stageName" jdbcType="VARCHAR" property="stageName"/>
        <result column="clickFinishTime" jdbcType="TIMESTAMP" property="clickFinishTime"/>
        <collection property="tags" column="id" select="com.zhixinhuixue.armor.dao.IZSYTaskTagMapper.selectByTaskId"
                    ofType="com.zhixinhuixue.armor.model.pojo.Tag"/>
        <collection property="delayNo" column="id" select="com.zhixinhuixue.armor.dao.IZSYTaskMapper.countDelayUser"
                    ofType="java.lang.Integer"/>
    </resultMap>

    <resultMap id="TaskResultMap" type="com.zhixinhuixue.armor.model.bo.TaskBO" extends="BaseResultMap">
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="projectImage" jdbcType="VARCHAR" property="projectImage"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <!-- 查询任务用户（阶段） -->
        <collection property="taskUsers" column="{taskId=id,userId=user_id}" select="selectTaskUser"
                    ofType="com.zhixinhuixue.armor.model.pojo.TaskUser"></collection>
    </resultMap>

    <resultMap id="WaitAuditResultMap" type="com.zhixinhuixue.armor.model.bo.TaskBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <result column="projectImage" jdbcType="VARCHAR" property="projectImage"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <association property="userIntegral" column="{taskId=id,userId=user_id}" select="selectUserIntegral"
                     javaType="java.lang.Double"/>
        <!-- 查询任务用户（阶段） -->
        <collection property="taskUsers" column="{taskId=id,userId=user_id}" select="selectTaskUser"
                    ofType="com.zhixinhuixue.armor.model.pojo.TaskUser"></collection>
    </resultMap>

    <resultMap id="TaskFinishedResultMap" type="com.zhixinhuixue.armor.model.bo.TaskBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <result column="task_integral" jdbcType="DECIMAL" property="taskIntegral"/>
        <result column="sonTaskCompleteTime" jdbcType="TIMESTAMP" property="sonTaskCompleteTime"/>
        <result column="projectImage" jdbcType="VARCHAR" property="projectImage"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <association property="userIntegral" column="{taskId=id,userId=user_id}" select="selectUserIntegral"
                     javaType="java.lang.Double"/>
        <!-- 查询任务用户（阶段） -->
        <collection property="taskUsers" column="{taskId=id,userId=user_id}" select="selectTaskUser"
                    ofType="com.zhixinhuixue.armor.model.pojo.TaskUser"></collection>
    </resultMap>

    <!-- 任务详情Map -->
    <resultMap id="TaskDetailResultMap" type="com.zhixinhuixue.armor.model.bo.TaskDetailBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl"/>
        <result column="stageName" jdbcType="VARCHAR" property="stageName"/>
        <result column="sonTaskCompleteTime" jdbcType="TIMESTAMP" property="sonTaskCompleteTime"/>
        <collection property="taskTags" column="id" select="com.zhixinhuixue.armor.dao.IZSYTaskTagMapper.selectByTaskId"
                    ofType="com.zhixinhuixue.armor.model.pojo.Tag"/>
        <collection property="taskUsers" column="id"
                    select="com.zhixinhuixue.armor.dao.IZSYTaskUserMapper.selectDetailByTaskId"
                    ofType="com.zhixinhuixue.armor.model.bo.TaskUserBO">
        </collection>
        <collection property="functionBOS" column="taskId=id"
                    ofType="com.zhixinhuixue.armor.model.bo.TaskFunctionBO"
                    select="com.zhixinhuixue.armor.dao.IZSYTaskFunctionMapper.selectBOListByTaskId"/>
    </resultMap>

    <resultMap id="WeekPublishTaskMap" type="com.zhixinhuixue.armor.model.bo.WeekPublishTaskBO">
        <result column="wpp_id" property="wppId" jdbcType="BIGINT"/>
        <result column="id" property="taskId" jdbcType="BIGINT"/>
        <result column="name" property="taskName" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="BIGINT"/>
        <result column="user_name" property="createByName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP"/>
        <result column="test_time" property="testTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="can_online" property="canOnline" jdbcType="INTEGER"/>
        <result column="condition" property="condition" jdbcType="VARCHAR"/>
        <result column="special_test_time" property="specialTestTime" jdbcType="VARCHAR"/>
        <result column="zujuan" property="zujuan" jdbcType="VARCHAR"/>
        <result column="yuejuan" property="yuejuan" jdbcType="VARCHAR"/>
        <result column="saomiao" property="saomiao" jdbcType="VARCHAR"/>
        <result column="xueyebaogao" property="xueyebaogao" jdbcType="VARCHAR"/>
        <result column="chanpin" property="chanpin" jdbcType="VARCHAR"/>
        <result column="real_test_time" property="realTestTime" jdbcType="VARCHAR"/>
        <result column="online_time" property="onlineTime" jdbcType="VARCHAR"/>
        <result column="real_online_time" property="realOnlineTime" jdbcType="VARCHAR"/>
        <collection property="userIds" column="taskId=id"
                    select="com.zhixinhuixue.armor.dao.IZSYTaskUserMapper.selectUserIdByTaskId"
                    ofType="java.lang.Long"/>
        <collection property="platforms" column="taskId=id"
                    select="com.zhixinhuixue.armor.dao.IZSYPlatformMapper.selectPlaformsByTask"
                    ofType="com.zhixinhuixue.armor.model.pojo.Platform"/>
        <collection property="userList" column="taskId=id"
                    select="com.zhixinhuixue.armor.dao.IZSYUserMapper.selectUsersByTaskId"
                    ofType="com.zhixinhuixue.armor.model.pojo.User"/>
    </resultMap>
    <!-- 查询任务详情 -->
    <select id="selectTaskDetailByTaskId" parameterType="java.lang.Long" resultMap="TaskDetailResultMap">
        select t1.*,t2.`name` as projectName,t3.`name` as stageName,t4.name as userName
        from task t1
        left join project t2 on t1.project_id = t2.id
        left JOIN stage t3 on t1.stage_id = t3.id
        left join `user` t4 on t4.id = t1.create_by
        where t1.id = #{taskId} and t1.is_delete = 0
        group by t1.`id`
    </select>

    <select id="selectTaskDetailByTaskId1" resultMap="TaskDetailResultMap">
        select t1.*,t2.`name` as projectName,t3.`name` as stageName from task t1
        left join project t2 on t1.project_id = t2.id
        left JOIN stage t3 on t1.stage_id = t3.id
        where t1.id = #{taskId} and t1.is_delete = 0
        <if test="stage != null ">
            and t1.stage_id = #{stage}
        </if>
        <if test="status == 0">
            and t1.status = #{status}
        </if>
    </select>

    <!-- 查询已完成未结束的任务 -->
    <select id="findNotFinishedTask" resultMap="BaseResultMap">
         select * from task where is_delete = 0 and `status` = 2 and `type` = 2
    </select>

    <!-- 根据状态查询任务 -->
    <select id="selectTaskByStatus" resultMap="TaskResultMap">
        select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t2.user_id,t4.`name` as userName, t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
           left join `user` t4 on t1.create_by = t4.id
        where t1.`status` = #{status} and t1.review_status = #{reviewStatus}
        and t2.`status`=#{taskUserStatus}
        and t1.is_delete = 0
        and t2.user_id = #{userId}
        order by t1.create_time desc
    </select>

    <!-- 查询测试任务 -->
    <select id="selectTaskByStatus1" resultMap="TaskResultMap">
        select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t2.user_id,t4.`name` as userName, t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        join task_test tt ON tt.task_id = t1.id
        left join project t3 on t1.project_id = t3.id
        left join `user` t4 on t1.create_by = t4.id
        where t1.`status` = 4
        and t1.is_delete = 0
        and t2.user_id = #{userId}
        order by t1.create_time desc
    </select>

    <!-- 查询所有待审核的任务 -->
    <select id="selectAllWaitAudit" resultMap="WaitAuditResultMap" parameterType="java.lang.Long">
         select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t4.`name` as userName,t2.user_id,t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
        left join `user` t4 on t1.create_by = t4.id
        left join department t5 on t4.department_id = t5.id
        where t1.`status` =1 and t1.review_status =1 and t2.`status`=1 and t1.is_delete = 0  and t5.parent_id = #{id}  order by t1.create_time desc
    </select>

    <!-- 查询还未评价完的任务 -->
    <select id="selectAllNotClosed" parameterType="java.lang.Long" resultMap="TaskDetailResultMap">
         select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage,
         t4.`name` as userName,t2.user_id,t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
        left join `user` t4 on t1.create_by = t4.id
--         left join `task_log` tl on tl.`task_id` = t1.`id` and tl.`title` LIKE '%阶段全部完成%'
        where t1.`status` = 2 and t1.review_status = 3 AND  t1.`status` != 3
        and t2.`status` >=2
        and t1.is_delete = 0
        and t2.user_id =#{userId}
        group by t1.`id`
        order by t1.create_time desc
    </select>

    <!-- 查询已完成的任务，包含评价 -->
    <select id="selectFinishedTask" resultMap="TaskFinishedResultMap" parameterType="java.lang.Long">
     select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName, t3.image_url as projectImage, t2.user_id,
     t4.`name` as userName,t4.avatar_url,t2.complete_time sonTaskCompleteTime ,uti.integral task_integral
     from task t1
            join task_user t2 on t1.id = t2.task_id
            left join project t3 on t1.project_id = t3.id
            left join `user` t4 on t1.create_by = t4.id
            left join `user_task_integral` uti on uti.task_id = t1.id and uti.`user_id` = #{userId}
            where t1.review_status = 3 and t2.`status` &gt; 1 AND  t2.`status` != 4
            and t2.user_id = #{userId} and t1.is_delete = 0  order by sonTaskCompleteTime desc
    </select>

    <!-- 查询用户完成任务后的积分 -->
    <select id="selectUserIntegral" resultType="java.lang.Double" parameterType="java.util.Map">
        select avg(integral) from user_integral where task_id = #{taskId} and user_id = #{userId}
    </select>

    <!-- 分页查询 -->
    <select id="selectPage" parameterType="com.zhixinhuixue.armor.model.dto.request.TaskListReqDTO"
            resultMap="PageResultMap">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName,t4.image_url as projectImage, t5.`name` as stageName,t6.`name` as userName,t6.avatar_url from
        task t1
        INNER JOIN task_user t2 on t1.id =t2.task_id
        INNER JOIN task_tag t3 on t1.id = t3.task_id
        INNER JOIN project t4 on t1.project_id = t4.id
        INNER JOIN stage t5 on t1.stage_id = t5.id
        INNER JOIN `user` t6 on t1.create_by = t6.id
        INNER JOIN  department t7 on t6.department_id = t7.id
        <where>
            t1.review_status = 3 and t1.is_delete = 0 and t7.parent_id = #{departmentId}
            <if test="taskId!=null and taskId!=0">
                and t1.id = #{taskId}
            </if>
            <if test="projectId!=null and projectId!=0">
                and t1.project_id = #{projectId}
            </if>
            <if test="type!=null and type!=0">
                and t1.type = #{type}
            </if>
            <if test="userId!=null and userId!=0">
                and t2.user_id = #{userId}
            </if>
            <if test="stageId!=null and stageId.size!=0">
                and t1.stage_id in
                <foreach collection="stageId" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="priority!=null and priority!=0">
                and t1.priority = #{priority}
            </if>
            <if test="tagId!=null and tagId.size!=0">
                and t3.tag_id in
                <foreach collection="tagId" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="status!=null and status==1">
                and t1.`status` = 1
            </if>
            <if test="status!=null and status==0">
                and t1.`status` = 0
            </if>
            <if test="status!=null and status ==2">
                and t1.`status` = 2
            </if>
            <if test="status!=null and status ==3">
                and t1.`status` = 3
            </if>
            <if test="beginTime!=null">
                and t1.create_time &gt;= #{beginTime}
            </if>
            <if test="endTime!=null">
                and t1.create_time &lt;= #{endTime}
            </if>
            <if test="createBy!=null and createBy!=0">
                and t1.create_by = #{createBy}
            </if>
        </where>
       <choose>
           <when test="sort!=null and sort !='' and sort==1">
               order by t1.priority DESC
           </when>
           <when test="sort!=null and sort !='' and sort==2">
               order by t1.end_time DESC
           </when>
           <when test="sort!=null and sort !='' and sort==3">
               order by t1.complete_time DESC
           </when>
           <when test="sort!=null and sort !='' and sort==4">
               order by t1.create_time DESC
           </when>
           <otherwise>
               order by t1.end_time ASC
           </otherwise>
       </choose>

    </select>

    <select id="selectPage1" parameterType="com.zhixinhuixue.armor.model.dto.request.TaskListReqDTO"
            resultMap="PageResultMap">
        select  t1.*, t4.`name` as projectName,
        group_concat(us.name) as projectImage,
        t5.`name` as stageName,t6.`name` as userName,
        group_concat(ta.name) as avatar_url
        from
        task t1
        left join task_user t2 on t1.id =t2.task_id
        left join user us on t2.user_id = us.id
        left join task_tag t3 on t1.id = t3.task_id
        left join tag ta on ta.id = t3.tag_id
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join  department t7 on t6.department_id = t7.id
        where
        t1.review_status = 3 and t1.is_delete = 0
        and t1.create_time >='2018-07-01 00:00:00'
        GROUP BY t1.id

    </select>

    <!-- 查询已完成的任务用户（阶段） -->
    <select id="selectTaskUser" parameterType="java.util.Map"
            resultMap="com.zhixinhuixue.armor.dao.IZSYTaskUserMapper.BaseResultMap">
        select * from task_user where  task_id = #{taskId} and user_id=#{userId}
    </select>

    <!-- 分页查询所有审核通过的任务 -->
    <select id="selectAllAuditSuccess" resultMap="WaitAuditResultMap">
      select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t2.user_id,t4.`name` as userName,t4.avatar_url from task t1
            join task_user t2 on t1.id = t2.task_id
            left join project t3 on t1.project_id = t3.id
            left join `user` t4 on t1.create_by = t4.id
            left join department t5 on t4.department_id = t5.id
            where t1.review_status =3 and t1.is_delete = 0 and t1.type=1 and t5.parent_id =#{id} order by t1.update_time desc
    </select>

    <!-- 查询任务用户评价 -->
    <select id="findTaskComment" resultMap="com.zhixinhuixue.armor.dao.IZSYTaskCommentMapper.BaseResultMap">
       select * from task_comment where task_id = #{taskId} and task_user_id = #{taskUserId}
    </select>

    <!-- 查询阶段下的任务 -->
    <select id="selectTaskByStageId" resultMap="PageResultMap" parameterType="java.util.Map">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage,
         t5.`name` as stageName,t6.`name` as userName,t6.avatar_url
         from task t1
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
--         LEFT JOIN `task_log` tl ON tl.`task_id` = t1.`id` AND tl.`title` LIKE '%阶段全部完成%'
         where t1.review_status = 3 and t1.is_delete = 0
         and t1.`type` = 2 and t1.stage_id = #{stageId}
         and t1.status != 3
         and t7.parent_id =#{departmentId}
        <if test="userId != null and userId != 1">
            and t1.create_by = #{userId}
        </if>
         group by t1.`id`
         order by t1.sort ASC
    </select>
    <select id="selectTaskByEndStageId" resultMap="PageResultMap" parameterType="java.util.Map">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage,
        t5.`name` as stageName,t6.`name` as userName,t6.avatar_url
        from task t1
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
--         LEFT JOIN `task_log` tl ON tl.`task_id` = t1.`id` AND tl.`title` LIKE '%阶段全部完成%'
        where t1.review_status = 3 and t1.is_delete = 0
        and t1.`type` = 2 and t1.stage_id = #{stageId}
        and t1.status != 3
        and t7.parent_id =#{departmentId}
        <if test="userId != null and userId != 1">
            and t1.create_by = #{userId}
        </if>
        group by t1.`id`
        order by t1.sort ASC


    </select>

    <!-- 查询阶段下的任务 -->
    <select id="selectTaskByStageTime" resultMap="PageResultMap" parameterType="java.util.Map">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage, t5.`name` as stageName,t6.`name` as userName,t6.avatar_url from task t1
        left join task_user t2 on t1.id =t2.task_id
        left join task_tag t3 on t1.id = t3.task_id
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
        where t1.review_status = 3 and t1.is_delete = 0
        and t1.`type` = 2 and t1.stage_id = #{stageId}
        and t7.parent_id =#{departmentId}
        <if test="time != null">
            <![CDATA[  and  t1.end_time <= #{time} ]]>
        </if>
        order by t1.sort ASC
    </select>
    <select id="selectTaskByEndStageTime" resultMap="PageResultMap" parameterType="java.util.Map">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage, t5.`name` as stageName,t6.`name` as userName,t6.avatar_url from task t1
        left join task_user t2 on t1.id =t2.task_id
        left join task_tag t3 on t1.id = t3.task_id
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
        where t1.review_status = 3 and t1.is_delete = 0 and t1.status !=3
        and t1.`type` = 2 and t1.stage_id = #{stageId}
        and t7.parent_id =#{departmentId}
        <if test="time != null">
            <![CDATA[  and  t1.end_time <= #{time} ]]>
        </if>
        order by t1.sort ASC
    </select>


    <!-- 查询阶段内任务最后一个index -->
    <select id="selectLastIndexByStageId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select sort from task where stage_id = #{stageId}
        and is_delete = 0 and type = 2 order by sort desc LIMIT 1
    </select>

    <!-- 修改任务下标 -->
    <update id="updateIndexByStageId">
        update task set sort = sort +1, update_time = now()
        where stage_id = #{stageId} and is_delete = 0 and `type` = 2  and sort >=#{sort}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from task
        where id = #{id,jdbcType=BIGINT} and is_delete = 0
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.zhixinhuixue.armor.model.pojo.Task">
      insert into task (id, name, description,
      project_id,stage_id, begin_time, test_time, end_time, `type`, status,
      review_status, priority, create_by,
      complete_time, create_time, update_time, is_delete,sort, facility, examine,doc
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR},
      #{projectId,jdbcType=BIGINT},#{stageId,jdbcType=BIGINT}, #{beginTime,jdbcType=TIMESTAMP},
      #{testTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},
      #{reviewStatus,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT},
      #{completeTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
       #{isDelete,jdbcType=INTEGER},#{sort,jdbcType=INTEGER},#{facility,jdbcType=INTEGER},#{examine,jdbcType=INTEGER}
       ,#{doc,jdbcType=LONGVARCHAR}
      )
  </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.zhixinhuixue.armor.model.pojo.Task">
        update task
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                doc = #{doc,jdbcType=LONGVARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=LONGVARCHAR},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=BIGINT},
            </if>
            <if test="stageId != null">
                stage_id = #{stageId,jdbcType=BIGINT},
            </if>
            <if test="beginTime != null">
                begin_time = #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="testTime != null">
                test_time = #{testTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="reviewStatus != null">
                review_status = #{reviewStatus,jdbcType=INTEGER},
            </if>
            <if test="priority != null">
                priority = #{priority,jdbcType=INTEGER},
            </if>
            <if test="facility != null">
                facility = #{facility,jdbcType=INTEGER},
            </if>
            <if test="examine != null">
                examine = #{examine,jdbcType=INTEGER},
            </if>
            <if test="completeTime != null">
                complete_time = #{completeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="isDelete != null or isDelete == 0">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="sort != null or sort == 0">
                sort = #{sort,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!--查询项目下是否有任务存在-->
    <select id="findTaskByProjectId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM task where project_id = #{projectId, jdbcType=BIGINT} AND is_delete = 0
    </select>

    <!--查询项目下超时的任务数-->
    <select id="countDelayUser" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select count(*) from task_user  where status =1
        <![CDATA[  and end_time<now() ]]>
        and task_id = #{id}
    </select>

    <!--查询项目下超时的任务数-->
    <select id="getTaskPlanList" resultMap="BaseResultMap">
        select id,`name` from task
        where status=1 AND is_delete = 0
    </select>

    <!-- sch -->
    <!--查询审核通过,进行中的任务-->
    <select id="selectTaskList" resultMap="PageResultMap">
        SELECT * FROM `task` WHERE `is_delete` = 0 AND `type` = 2 AND `status` = 1 and `review_status` = 3
    </select>

    <!--查询审核通过,进行中的子任务-->
    <select id="selectSonTaskList" resultMap="TaskResultMap">
        select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t2.user_id,t4.`name` as userName, t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
           left join `user` t4 on t1.create_by = t4.id
        where t1.`status` = 1 and t1.review_status = 3
        and t2.`status`= 1
        and t1.is_delete = 0
        and t1.type = 2
        order by t1.create_time desc
    </select>

    <!--通过stageId查询我的已发布任务-->
    <select id="selectMyTaskByStageId" resultMap="PageResultMap">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage,
        t5.`name` as stageName,t6.`name` as userName,t6.avatar_url
         from task t1
        left join task_user t2 on t1.id =t2.task_id
        left join task_tag t3 on t1.id = t3.task_id
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
--         LEFT JOIN `task_log` tl ON tl.`task_id` = t1.`id` AND tl.`title` LIKE '%阶段全部完成%'
         where t1.review_status = 3 and t1.is_delete = 0
         and t1.`type` = 2 and t1.stage_id = #{stageId}
         and t1.status != 3
         and t7.parent_id =#{departmentId}
         and t1.create_by = #{userId}
         group by t1.`id`
         order by t1.sort ASC
    </select>

    <!--通过stageId查询我的任务-->
    <select id="selectMyTaskByEndStageId" resultMap="PageResultMap">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage,
        t5.`name` as stageName,t6.`name` as userName,t6.avatar_url
         from task t1
        left join task_user t2 on t1.id =t2.task_id
        left join task_tag t3 on t1.id = t3.task_id
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
--         LEFT JOIN `task_log` tl ON tl.`task_id` = t1.`id` AND tl.`title` LIKE '%阶段全部完成%'
        where t1.review_status = 3 and t1.is_delete = 0
        and t1.`type` = 2 and t1.stage_id = #{stageId}
        and t1.status != 3
        and t7.parent_id =#{departmentId}
        and t1.create_by = #{userId}
        group by t1.`id`
        order by t1.sort ASC
    </select>

    <!--查询我的未完成任务-->
    <select id="selectMyRunningTask" resultMap="BaseResultMap">
        SELECT * FROM `task` t LEFT JOIN `task_user` tu ON t.id = tu.task_id
        WHERE t.is_delete = 0 AND t.review_status = 3 AND t.status = 1 AND tu.user_id = #{userId}
    </select>

    <!--查询2020-02总任务已完成的-->
    <select id="selectTaskDone" resultType="com.zhixinhuixue.armor.model.pojo.Task">
        SELECT * FROM `task` t LEFT JOIN `task_user` tu ON t.id = tu.task_id
        WHERE t.is_delete = 0 AND t.review_status = 3 AND t.status = 2 AND t.type = 2
        AND tu.user_id = #{userId} AND t.complete_time >= '2020-02-01 00:00:00'
    </select>


    <!--查询2020-02总任务已完成的个人任务-->
    <select id="selectPrivateTaskDone" resultMap="BaseResultMap">
        SELECT * FROM `task` t LEFT JOIN `task_user` tu ON t.id = tu.task_id
        WHERE t.is_delete = 0 AND t.review_status = 3 AND t.status in (2,3) AND t.type = 1
        AND tu.user_id = #{userId} AND t.complete_time >= '2020-02-01 00:00:00'
    </select>
    <!--分页查询已评价的任务-->
    <select id="selectCommented" resultMap="TaskDetailResultMap">
        select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t4.`name` as userName,t2.user_id,t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
        left join `user` t4 on t1.create_by = t4.id
        where t1.`status` = 3 and t1.review_status = 3 AND  t1.`status` != 4
        and t2.`status` >=2
        and t1.is_delete = 0
        and user_id =#{userId}
        order by t1.create_time desc
    </select>

    <!--分页查询管理员页面  待审核任务-->
    <select id="selectPendingTaskPage" resultMap="WaitAuditResultMap">
        select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName,t3.image_url as projectImage, t4.`name` as userName,t2.user_id,t4.avatar_url from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
        left join `user` t4 on t1.create_by = t4.id
        left join department t5 on t4.department_id = t5.id
        where t1.`status` =1 and t1.review_status =1 and t2.`status`=1 and t1.is_delete = 0  and t5.parent_id = #{departmentId}  order by t1.create_time desc
    </select>

    <!--所有进行中的多人任务-->
    <select id="selectAllTaskBase" resultMap="BaseResultMap">
        SELECT * FROM `task` WHERE `review_status` = 3 AND `status` = 1 AND `type` = 2 AND `is_delete` = 0 order by create_time desc
    </select>

    <!--根据阶段查询可用的多人任务-->
    <select id="selectTaskInfoByStageId" resultMap="PageResultMap">
        select DISTINCT(t1.id) as dist, t1.*, t4.`name` as projectName, t4.image_url as projectImage, t5.`name` as stageName,t6.`name` as userName,t6.avatar_url from task t1
        left join project t4 on t1.project_id = t4.id
        left JOIN stage t5 on t1.stage_id = t5.id
        left join `user` t6 on t1.create_by = t6.id
        left join department t7 on t6.department_id = t7.id
        where t1.review_status = 3 and t1.is_delete = 0
        and t1.`type` = 2 and t1.stage_id = #{stageId}
        and t1.status = 1
        and t7.parent_id =#{departmentId}
        order by t1.sort ASC
    </select>

    <!--查询即将发版任务(测试中)-->
    <select id="selectWeekPublishTask" resultMap="WeekPublishTaskMap">
        SELECT t.id,t.name,t.create_by,u.name user_name,t.end_time,wpp.can_online,wpp.condition,wpp.id wpp_id,
        t.create_time,t.begin_time,t.test_time,
        wpp.special_test_time,wpp.real_test_time,wpp.online_time,wpp.real_online_time,
        wpp.zujuan,wpp.yuejuan,wpp.saomiao,wpp.xueyebaogao,wpp.chanpin
        FROM task t
        LEFT JOIN user u ON u.id = t.create_by
        LEFT JOIN week_publish_plan wpp ON wpp.task_id = t.id
        WHERE t.is_delete = 0 AND t.review_status = 3 AND t.type = 2
        <![CDATA[  AND  t.end_time >= #{reqDTO.beginTime} ]]>
        <![CDATA[  AND  t.end_time <= #{reqDTO.endTime} ]]>
        <if test="reqDTO.isTesting == true ">
            AND t.stage_id = 212754785051344896
        </if>
        GROUP BY t.id
        ORDER BY t.create_by,t.end_time DESC
    </select>


    <!--按任务负责人分组查看-->
    <select id="selectWeekPublishTaskList" resultMap="WeekPublishTaskMap"
            parameterType="com.zhixinhuixue.armor.model.dto.request.WeekPublishQueryReqDTO">
        SELECT t.id,t.name,t.create_by,u.name user_name,t.end_time,wpp.can_online,wpp.condition,wpp.id wpp_id,
        t.create_time,t.begin_time,t.test_time,
        wpp.special_test_time,wpp.real_test_time,wpp.online_time,wpp.real_online_time,
        wpp.zujuan,wpp.yuejuan,wpp.saomiao,wpp.xueyebaogao,wpp.chanpin
        FROM task t
        LEFT JOIN user u ON u.id = t.create_by
        LEFT JOIN week_publish_plan wpp ON wpp.task_id = t.id
        WHERE t.is_delete = 0 AND t.review_status = 3 AND t.type = 2
        <![CDATA[  AND  t.end_time >= #{beginTime} ]]>
        <![CDATA[  AND  t.end_time <= #{endTime} ]]>
        <if test="isTesting == true ">
            AND t.stage_id = 212754785051344896
        </if>
        GROUP BY t.id
    </select>

    <!--查询当前负责的进行中的任务-->
    <select id="selectDoingListByUser" resultMap="BaseResultMap">
        SELECT * FROM `task` WHERE `is_delete` = 0 AND `review_status` = 3 AND `status` = 1 AND `type` = 2 AND `create_by` = #{userId}
    </select>

    <!--查询7月之后的任务-->
    <select id="selectListAfterJuly" resultMap="BaseResultMap">
        SELECT * FROM `task` WHERE `is_delete` = 0 AND `review_status` = 3 AND `begin_time` >= '2019-07-01 00:00:00'
    </select>

    <!--所有进行中的任务-->
    <select id="selectAllDoingTasks" resultMap="BaseResultMap">
        SELECT t.* FROM `task` t
        LEFT JOIN `user` u ON u.id = t.`create_by`
        WHERE t.`is_delete` = 0 AND t.`review_status` = 3 AND t.`status` = 1 AND t.`type` = 2
        AND u.`is_delete` = 0 AND u.`status` = 0 AND u.`user_role` IN (0,1)
    </select>

    <!--查询全部发布任务-->
    <select id="selectAllCompleteTasks" resultMap="BaseResultMap">
        SELECT * FROM `task` WHERE `is_delete` = 0 AND `review_status` = 3 AND `status` = 2 AND `type` = 2
    </select>

    <!--查询已经产生bug的任务-->
    <select id="selectBugTasks" resultMap="BaseResultMap">
        SELECT t.* FROM `task_bug` tb
        LEFT JOIN `task` t ON t.`id` = tb.`task_id`
        WHERE tb.`is_delete` = 0 AND t.`is_delete` = 0 AND t.`review_status` = 3
        GROUP BY tb.`task_id`
    </select>

    <!--测试相关阶段的任务-->
    <select id="selectTestTask" resultMap="BaseResultMap">
        SELECT * FROM `task` WHERE `is_delete` = 0 AND `review_status` = 3
        AND `status` = 1 AND `stage_id` IN (212754785051344895,212754785051344896)
    </select>
    <!-- sch -->
</mapper>