<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYTaskMapper">
    <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.Task">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="review_status" jdbcType="INTEGER" property="reviewStatus"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, description, project_id, end_time, `type`, status, review_status, priority, create_by,
        complete_time, create_time, update_time
    </sql>

    <resultMap id="TaskResultMap" type="com.zhixinhuixue.armor.model.bo.TaskBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
    </resultMap>

    <resultMap id="TaskFinishedResultMap" type="com.zhixinhuixue.armor.model.bo.TaskBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <association property="userIntegral" column="{taskId=task_id,userId=user_id}" select="selectUserIntegral" javaType="java.lang.Integer" />
    </resultMap>

    <!-- 任务详情Map -->
    <resultMap id="TaskDetailResultMap" type="com.zhixinhuixue.armor.model.bo.TaskDetailBO" extends="BaseResultMap">
        <result column="projectName" jdbcType="VARCHAR" property="projectName"/>
        <collection property="taskTags" column="id" select="com.zhixinhuixue.armor.dao.IZSYTaskTagMapper.selectByTaskId"
                    ofType="com.zhixinhuixue.armor.model.pojo.Tag"></collection>
        <collection property="taskUsers" column="id"
                    select="com.zhixinhuixue.armor.dao.IZSYTaskUserMapper.selectDetailByTaskId"
                    ofType="com.zhixinhuixue.armor.model.bo.TaskUserBO">

        </collection>
    </resultMap>

    <!-- 查询任务详情 -->
    <select id="selectTaskDetailByTaskId" parameterType="java.lang.Long" resultMap="TaskDetailResultMap">
    select t1.*,t2.`name` as projectName from task t1
    left join project t2 on t1.project_id = t2.id
    where t1.id = #{taskId}
    </select>

    <!-- 根据状态查询任务 -->
    <select id="selectTaskByStatus" resultMap="TaskResultMap">
        select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName from task t1
        join task_user t2 on t1.id = t2.task_id
        left join project t3 on t1.project_id = t3.id
        where t1.`status` = #{status} and t1.review_status = #{reviewStatus}
        and t2.user_id = #{userId}
    </select>

    <!-- 查询已结束的任务，包含评价 -->
    <select id="selectFinishedTask" resultMap="TaskFinishedResultMap" parameterType="java.lang.Long">
     select DISTINCT t1.id as ex_id, t1.*,t3.name as projectName from task t1
            join task_user t2 on t1.id = t2.task_id
            left join project t3 on t1.project_id = t3.id
            where t1.`status` = 3 and t1.review_status = 3
            and t2.user_id = #{userId}
    </select>

    <!-- 查询用户完成任务后的积分 -->
    <select id="selectUserIntegral" resultType="java.lang.Integer" parameterType="java.util.Map">
        select sum(integral) from user_integral where task_id = #{taskId} and user_id = #{userId}
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from task
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.zhixinhuixue.armor.model.pojo.Task">
      insert into task (id, name, description,
      project_id, end_time, `type`, status,
      review_status, priority, create_by,
      complete_time, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{projectId,jdbcType=BIGINT}, #{endTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},
      #{reviewStatus,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{createBy,jdbcType=BIGINT},
      #{completeTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.zhixinhuixue.armor.model.pojo.Task">
        update task
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=BIGINT},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                status = #{type,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="reviewStatus != null">
                review_status = #{reviewStatus,jdbcType=INTEGER},
            </if>
            <if test="priority != null">
                priority = #{priority,jdbcType=INTEGER},
            </if>
            <if test="completeTime != null">
                complete_time = #{completeTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>