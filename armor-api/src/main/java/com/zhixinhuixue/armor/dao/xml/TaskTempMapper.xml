<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYTaskTempMapper">

    <resultMap id="BaseTaskTempMap" type="com.zhixinhuixue.armor.model.pojo.TaskTemp">
        <id column="id" property="id" jdbcType="BIGINT"></id>
        <result column="task_id" property="taskId" jdbcType="BIGINT"></result>
        <result column="user_id" property="userId" jdbcType="BIGINT"></result>
        <result column="work_hours" property="workHours" jdbcType="DECIMAL"></result>
        <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP"></result>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"></result>
        <result column="type" property="type" jdbcType="INTEGER"></result>
        <result column="status" property="status" jdbcType="INTEGER"></result>
        <result column="review_status" property="reviewStatus" jdbcType="INTEGER"></result>
        <result column="description" property="description" jdbcType="VARCHAR"></result>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <resultMap id="TaskTempBO" type="com.zhixinhuixue.armor.model.bo.TaskTempBO" extends="BaseTaskTempMap">
        <result column="task_name" property="taskName" jdbcType="VARCHAR"></result>
        <result column="user_name" property="userName" jdbcType="VARCHAR"></result>
        <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR"></result>
        <result column="project_image" property="projectImage" jdbcType="VARCHAR"></result>
        <result column="project_name" property="projectName" jdbcType="VARCHAR"></result>
        <result column="project_id" property="projectId" jdbcType="BIGINT"></result>
        <result column="priority" property="priority" jdbcType="INTEGER"></result>
        <collection property="userWeekTempList" column="{userId=user_id,taskId=task_id}"
                ofType="com.zhixinhuixue.armor.model.pojo.UserWeekTemp"
                select="selectUserWeekTempByUserAndTask"></collection>
        <collection property="taskReviewLogBOS" column="id"
                    ofType="com.zhixinhuixue.armor.model.bo.TaskReviewLogBO"
                    select="selectTaskReviewLogByTaskTemp"/>
    </resultMap>

    <resultMap id="BaseTaskReviewLogMap" type="com.zhixinhuixue.armor.model.pojo.TaskReviewLog">
        <id column="id" property="id" jdbcType="BIGINT"></id>
        <result column="task_temp_id" property="taskTempId" jdbcType="BIGINT"></result>
        <result column="task_id" property="taskId" jdbcType="BIGINT"></result>
        <result column="check_user_id" property="checkUserId" jdbcType="BIGINT"></result>
        <result column="check_user_name" property="checkUserName" jdbcType="VARCHAR"></result>
        <result column="level" property="level" jdbcType="INTEGER"></result>
        <result column="suggest" property="suggest" jdbcType="VARCHAR"></result>
        <result column="review_time" property="reviewTime" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <resultMap id="TaskReviewLogBOMap" type="com.zhixinhuixue.armor.model.bo.TaskReviewLogBO" extends="BaseTaskReviewLogMap">
        <result column="task_name" property="taskName" jdbcType="VARCHAR"></result>
    </resultMap>

    <resultMap id="BaseUserWeekTempMap" type="com.zhixinhuixue.armor.model.pojo.UserWeekTemp">
        <id column="id" property="id" jdbcType="BIGINT"></id>
        <result column="week_number" property="weekNumber" jdbcType="INTEGER"></result>
        <result column="hours" property="hours" jdbcType="DECIMAL"></result>
        <result column="user_id" property="userId" jdbcType="BIGINT"></result>
        <result column="task_id" property="taskId" jdbcType="BIGINT"></result>
        <result column="year" property="year" jdbcType="INTEGER"></result>
        <result column="status" property="status" jdbcType="INTEGER"></result>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <!--新增任务-->
    <insert id="insertTaskTemp" parameterType="com.zhixinhuixue.armor.model.pojo.TaskTemp">
        INSERT INTO `task_temp`
        (`id`,`task_id`,`user_id`,`begin_time`,`end_time`,`work_hours`,`description`,`type`
        ,`status`,`review_status`,`create_time`,`level`)
        VALUES
        (#{id,jdbcType=BIGINT},#{taskId,jdbcType=BIGINT},#{userId,jdbcType=BIGINT},#{beginTime,jdbcType=TIMESTAMP},#{endTime,jdbcType=TIMESTAMP}
        ,#{workHours,jdbcType=DECIMAL},#{description,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},#{status,jdbcType=INTEGER},#{reviewStatus,jdbcType=INTEGER}
        ,#{createTime,jdbcType=TIMESTAMP},#{level,jdbcType=INTEGER})
    </insert>

    <!--批量插入周工作量(临时)-->
    <insert id="insertUserWeekTempBatch" parameterType="com.zhixinhuixue.armor.model.pojo.UserWeekTemp">
        INSERT INTO `user_week_temp`
        (`id`,`week_number`,`hours`,`user_id`,`task_id`,`year`,`status`,`create_time`)
        VALUES
        <foreach collection="userWeekList" item="item" separator=",">
            (#{item.id,jdbcType=BIGINT},#{item.weekNumber,jdbcType=INTEGER},#{item.hours,jdbcType=DECIMAL},#{item.userId,jdbcType=BIGINT}
            ,#{item.taskId,jdbcType=BIGINT},#{item.year,jdbcType=INTEGER},#{item.status,jdbcType=INTEGER},#{item.createTime,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <!--插入临时任务审核日志-->
    <insert id="insertTaskReviewLog" parameterType="com.zhixinhuixue.armor.model.pojo.TaskReviewLog">
        INSERT INTO `task_review_log` (`id`,`task_id`,`task_temp_id`,`check_user_id`,`check_user_name`,`level`,`suggest`,`review_time`)
        VALUES
        (#{id,jdbcType=BIGINT},#{taskId,jdbcType=BIGINT},#{taskTempId,jdbcType=BIGINT},#{checkUserId,jdbcType=BIGINT}
        ,#{checkUserName,jdbcType=VARCHAR},#{level,jdbcType=INTEGER},#{suggest,jdbcType=VARCHAR},#{reviewTime,jdbcType=TIMESTAMP})
    </insert>

    <!--修改任务(临时)-->
    <update id="updateTaskTemp" parameterType="com.zhixinhuixue.armor.model.pojo.UserWeekTemp">
        UPDATE `task_temp`
        <set>
            <if test="workHours != null">
                `work_hours` = #{workHours,jdbcType=DECIMAL},
            </if>
            <if test="beginTime != null">
                `begin_time` = #{beginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                `end_time` = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null and description != ''">
                `description` = #{description,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="reviewStatus != null">
                `review_status` = #{reviewStatus,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                `level` = #{level,jdbcType=INTEGER}
            </if>
        </set>
        WHERE `id` = #{id,jdbcType=BIGINT}
    </update>

    <!--删除周工作量-->
    <update id="updateUserWeekTempBatch" parameterType="java.util.List">
        UPDATE `user_week_temp`
        set `status` = 3
        where `id` in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <!--审核userWeekTemp-->
    <update id="checkUserWeekTempBatch" parameterType="java.util.List">
        UPDATE `user_week_temp`
        set `status` = 2
        where `id` in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <!--删除原有的userWeekTemp-->
    <delete id="deleteUserWeekTempByUserAndTask">
        DELETE FROM `user_week_temp` WHERE `user_id` = #{userId} AND `task_id` = #{taskId}
    </delete>

    <!--根据临时任务id   删除审核日志-->
    <delete id="deleteTaskReviewLog">
        DELETE FROM `task_review_log` WHERE `task_temp_id` = #{id}
    </delete>

    <!--根据任务和用户删除临时任务-->
    <delete id="deleteByUserAndTask">
        DELETE FROM `task_temp` WHERE `user_id` = #{userId} AND `task_id` = #{taskId}
    </delete>

    <delete id="deleteByTask">
        DELETE FROM `task_temp` WHERE `task_id` = #{taskId}
    </delete>

    <delete id="deleteReviewLogByTask">
        DELETE FROM `task_review_log` WHERE `task_id` = #{taskId}
    </delete>

    <delete id="deleteUserWeekTempByTask">
        DELETE FROM `user_week_temp` WHERE `task_id` = #{taskId}
    </delete>

    <!--根据任务id和userId查询 临时任务-->
    <select id="selectByUserAndTask" resultMap="BaseTaskTempMap">
        SELECT * FROM `task_temp` WHERE `user_id` = #{userId} AND `task_id` = #{taskId} AND `review_status` != 3
    </select>

    <!--根据主键查询-->
    <select id="selectById" resultMap="BaseTaskTempMap">
        SELECT * FROM `task_temp` WHERE `id` = #{id} AND `review_status` != 3
    </select>

    <!--根据userId和taskId查询周工作量-->
    <select id="selectUserWeekTempByUserAndTask" resultMap="BaseUserWeekTempMap">
        SELECT * FROM `user_week_temp` WHERE `user_id` = #{userId} AND `task_id` = #{taskId} AND `status` != 3
    </select>

    <!--个人分页查看任务-->
    <select id="selectPersonalTaskTempPage" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image,p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = #{reviewStatus} AND tt.`user_id` = #{userId}
        ORDER BY tt.`create_time` DESC
    </select>

    <!--管理员分页查看任务-->
    <select id="selectTaskTempPage" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image, p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = #{reviewStatus}
        ORDER BY tt.`create_time` DESC
    </select>

    <!--个人查看待审核任务-->
    <select id="selectPersonalTaskTempList" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image,
        p.name project_name,p.id project_id,t.priority priority
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = 1 AND tt.`user_id` = #{userId}
        ORDER BY tt.`create_time` DESC
    </select>

    <!--根据主键查看任务-->
    <select id="selectTaskTempBOById" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image,p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE tt.`id` = #{ttId}
        ORDER BY tt.`create_time` DESC
    </select>

    <!--查看临时任务审核日志-->
    <select id="selectTaskReviewLogByTaskTemp" resultMap="TaskReviewLogBOMap">
        SELECT trl.*,t.name task_name FROM `task_review_log` trl
        LEFT JOIN `task` t ON t.id = trl.task_id
        WHERE trl.task_temp_id = #{id}
    </select>

    <!--一级待审核临时任务-->
    <select id="selectTaskTempLevelOne" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image, p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = 1 and tt.user_id in
        (SELECT user_id FROM user_check_people WHERE check_user_id = #{userId} and `level` = 1)
        ORDER BY tt.`create_time` DESC
    </select>

    <!--二级待审核临时任务-->
    <select id="selectTaskTempLevelTwo" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image, p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = 1 and tt.user_id in
        (SELECT user_id FROM user_check_people WHERE check_user_id = #{userId} and `level` = 2)
        AND tt.level > 1
        ORDER BY tt.`create_time` DESC
    </select>

    <!--根据审核人id 查询审核通过多人任务-->
    <select id="selectAccessedByCheckUser" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image, p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = 2 and tt.user_id in
        (SELECT user_id FROM user_check_people WHERE check_user_id = #{checkUserId})
        ORDER BY tt.`create_time` DESC
    </select>

    <!--三级待审核临时任务-->
    <select id="selectTaskTempLevelThree" resultMap="TaskTempBO">
        SELECT tt.*,u.name user_name,u.avatar_url avatar_url,t.name task_name,p.image_url project_image, p.name project_name
        FROM `task_temp` tt
        LEFT JOIN `user` u ON u.id = tt.user_id
        LEFT JOIN `task` t ON tt.task_id = t.id
        LEFT JOIN `project` p ON p.id = t.project_id
        WHERE  tt.`review_status` = 1 and tt.user_id in
        (SELECT user_id FROM user_check_people WHERE check_user_id = #{userId} and `level` = 3)
        AND tt.level > 2
        ORDER BY tt.`create_time` DESC
    </select>

    <select id="selectTaskReviewLogByTaskTempAndCheckUser" resultMap="BaseTaskReviewLogMap">
        SELECT * FROM `task_review_log` WHERE `task_temp_id` = #{ttId} AND `check_user_id` = #{checkUserId}
    </select>
</mapper>