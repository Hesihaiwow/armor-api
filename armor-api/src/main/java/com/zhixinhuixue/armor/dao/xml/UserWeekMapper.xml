<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYUserWeekMapper">
  <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.UserWeek">
  <id column="id" jdbcType="BIGINT" property="id" />
  <result column="week_number" jdbcType="INTEGER" property="weekNumber" />
  <result column="hours" jdbcType="DECIMAL" property="hours" />
  <result column="task_id" jdbcType="BIGINT" property="taskId" />
  <result column="user_id" jdbcType="BIGINT" property="userId" />
</resultMap>
  <sql id="Base_Column_List">
    id, week_number, hours, task_id, user_id
  </sql>

  <resultMap id="WeekMap" type="com.zhixinhuixue.armor.model.bo.StatsUserWeekBO" extends="BaseResultMap">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="name" jdbcType="VARCHAR" property="userName"/>
    <result column="taskName" jdbcType="VARCHAR" property="taskName"/>
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>

  <insert id="insertList" parameterType="java.util.List">
    insert into user_week (id, week_number, hours, task_id, user_id )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.weekNumber,jdbcType=INTEGER},
      #{item.hours,jdbcType=DECIMAL}, #{item.taskId,jdbcType=BIGINT}, #{item.userId,jdbcType=BIGINT} )
    </foreach>
  </insert>

  <select id="selectByTaskId" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT * FROM user_week where task_id = #{taskId} and user_id = #{userId}
  </select>

  <delete id="deleteByTaskId" parameterType="java.lang.Long">
    delete from user_week where task_id = #{taskId}
  </delete>

  <!-- 周任务统计 -->
  <select id="getUserWeekStats" parameterType="com.zhixinhuixue.armor.model.dto.request.UserWeekStatsReqDTO" resultMap="WeekMap">
    SELECT (@rowid := @rowid+1) AS id,a.* FROM(
    SELECT u.name, t.name as taskName, t.description, w.*  FROM user_week w
    JOIN  user u on u.id= w.user_id
    JOIN  task t on t.id = w.task_id
    WHERE w.week_number = #{weekNumber}
    <if test="userId!=null">
      and w.user_id = #{userId}
    </if>
    ORDER BY u.last_login)as a,(SELECT (@rowid:=0))as b
  </select>
</mapper>