<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYSignInMapper">
    <resultMap id="BaseExtraWork" type="com.zhixinhuixue.armor.model.pojo.ExtraWork">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="work_hours" property="workHours" jdbcType="FLOAT"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
        <result column="review_status" property="reviewStatus" jdbcType="INTEGER"/>
        <result column="check_time" property="checkTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="BaseTaskMap" type="com.zhixinhuixue.armor.model.pojo.Task">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>
        <result column="stage_id" jdbcType="BIGINT" property="stageId"/>
        <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime"/>
        <result column="test_time" jdbcType="TIMESTAMP" property="testTime"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="is_delete" jdbcType="INTEGER" property="isDelete"/>
        <result column="review_status" jdbcType="INTEGER" property="reviewStatus"/>
        <result column="priority" jdbcType="INTEGER" property="priority"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="facility" jdbcType="INTEGER" property="facility"/>
        <result column="examine" jdbcType="INTEGER" property="examine"/>
    </resultMap>

    <resultMap id="BaseUserMap" type="com.zhixinhuixue.armor.model.pojo.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="department_id" jdbcType="BIGINT" property="departmentId" />
        <result column="job_name" jdbcType="VARCHAR" property="jobName" />
        <result column="job_role" jdbcType="INTEGER" property="jobRole" />
        <result column="integral" jdbcType="DECIMAL" property="integral" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
        <result column="user_role" jdbcType="INTEGER" property="userRole" />
        <result column="check_sort" jdbcType="INTEGER" property="checkSort" />
        <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
    </resultMap>

    <resultMap id="BaseSignInMap" type="com.zhixinhuixue.armor.model.pojo.SignIn">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="check_time" property="checkTime" jdbcType="TIMESTAMP"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="SignInBoMap" type="com.zhixinhuixue.armor.model.bo.SignInBO" extends="BaseSignInMap">
        <result column="check_time_str" property="checkTimeStr" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="SignInOriginMap" type="com.zhixinhuixue.armor.model.bo.SignInOriginBO" extends="BaseSignInMap">
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResignInMap" type="com.zhixinhuixue.armor.model.pojo.ResignIn">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="recheck_time" property="recheckTime" jdbcType="TIMESTAMP"/>
        <result column="reason" property="reason" jdbcType="VARCHAR"/>
        <result column="review_status" property="reviewStatus" jdbcType="INTEGER"/>
    </resultMap>

    <!--批量新增userSort-->
    <insert id="addUserSortBatch" parameterType="com.zhixinhuixue.armor.model.pojo.UserSort">
        INSERT INTO `user_sort`
        (`sort`,`user_name`) VALUES
        <foreach collection="userSortList" item="userSort" separator=",">
            (#{userSort.sort,jdbcType=INTEGER},#{userSort.userName,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <!--批量导入考勤打卡记录-->
    <insert id="insertSignInBatch" parameterType="com.zhixinhuixue.armor.model.pojo.SignIn">
        INSERT INTO `sign_in`
        (`id`,`user_id`,`check_time`,`type`) VALUES
        <foreach collection="signIns" item="signIn" separator=",">
            (#{signIn.id,jdbcType=BIGINT},#{signIn.userId,jdbcType=BIGINT},#{signIn.checkTime,jdbcType=TIMESTAMP},#{signIn.type,jdbcType=INTEGER})
        </foreach>
    </insert>

    <!--新增补打卡申请-->
    <insert id="addResignIn" parameterType="com.zhixinhuixue.armor.model.pojo.ResignIn">
        INSERT INTO `resign_in`
        (`id`,`user_id`,`recheck_time`,`reason`,`review_status`,`type`)
        VALUES
        (#{resignIn.id,jdbcType=BIGINT},#{resignIn.userId,jdbcType=BIGINT},#{resignIn.recheckTime,jdbcType=TIMESTAMP}
        ,#{resignIn.reason,jdbcType=VARCHAR},#{resignIn.reviewStatus,jdbcType=INTEGER},#{resignIn.type,jdbcType=INTEGER})
    </insert>

    <!--新增签到记录-->
    <insert id="addSignIn" parameterType="com.zhixinhuixue.armor.model.pojo.SignIn">
        INSERT INTO `sign_in`
        (`id`,`user_id`,`check_time`,`type`) VALUES
        (#{signIn.id,jdbcType=BIGINT},#{signIn.userId,jdbcType=BIGINT},#{signIn.checkTime,jdbcType=TIMESTAMP},#{signIn.type,jdbcType=INTEGER})
    </insert>

    <!--修改补打卡申请-->
    <update id="updateResignIn" parameterType="com.zhixinhuixue.armor.model.pojo.ResignIn">
        UPDATE `resign_in`
        <set>
            <if test="resignIn.reason != null and resignIn.reason != '' ">
                `reason` = #{resignIn.reason,jdbcType=VARCHAR},
            </if>
            <if test="resignIn.recheckTime != null">
                `recheck_time` = #{resignIn.recheckTime,jdbcType=TIMESTAMP},
            </if>
            <if test="resignIn.reviewStatus != null">
                `review_status` = #{resignIn.reviewStatus,jdbcType=INTEGER}
            </if>
        </set>
        WHERE `id` = #{id}
    </update>

    <!--更新原始考勤-->
    <update id="updateSignIn" parameterType="com.zhixinhuixue.armor.model.pojo.SignIn">
        UPDATE `sign_in`
        <set>
            `check_time` = #{checkTime},
        </set>
        WHERE id = #{id}
    </update>

    <!--清空userSort-->
    <delete id="deleteUserSort">
        TRUNCATE TABLE `user_sort`
    </delete>

    <!--删除补打卡申请-->
    <delete id="deleteResignInById">
        DELETE FROM  `resign_in` WHERE `id` = #{id}
    </delete>

    <!--删除指定signIn-->
    <delete id="deleteSignIn">
        DELETE FROM `sign_in` WHERE `user_id` = #{userId} AND `check_time` = #{recheckTime}
    </delete>

    <!--删除type=2 的多余记录-->
    <delete id="deleteUselessSignIn">
        DELETE FROM `sign_in` WHERE `type` = 2 AND `user_id` = #{userId}
        <![CDATA[  and  `check_time` >= #{today0} ]]>
        <![CDATA[  and  `check_time` <= #{today23} ]]>
    </delete>

    <!--删除原始考勤-->
    <delete id="deleteSignInById">
        DELETE FROM `sign_in` WHERE `id` = #{id}
    </delete>

    <!--根据 序号 查询user-->
    <select id="selectUserBySort" resultMap="BaseUserMap">
        SELECT * FROM `user` where `check_sort` = #{sort}
    </select>

    <!--查询全部考勤记录-->
    <select id="selectSignInList" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in`
    </select>

    <!--导入记录的最后一条记录打卡时间-->
    <select id="selectSingInLastRecord" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` where `type` = 0 ORDER BY `check_time` DESC LIMIT 1
    </select>

    <!--分页查询考勤记录-->
    <select id="selectSignInPage" resultMap="SignInBoMap">
        SELECT si.*,GROUP_CONCAT(`check_time`) check_time_str FROM `sign_in` si
        LEFT JOIN `user` u on si.user_id = u.id
        <where>
            u.`is_delete` = 0
            <if test="reqDTO.userId != null">
                AND si.`user_id` = #{reqDTO.userId}
            </if>
            <if test="reqDTO.userIds != null and reqDTO.userIds.size > 0">
                AND si.`user_id` IN
                <foreach collection="reqDTO.userIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="reqDTO.beginTime != null">
                <![CDATA[  and  si.`check_time` >= #{reqDTO.beginTime} ]]>
            </if>
            <if test="reqDTO.endTime != null">
                <![CDATA[  and  si.`check_time` <= #{reqDTO.endTime} ]]>
            </if>
        </where>
        GROUP BY `user_id`,DATE(`check_time`) ORDER BY `check_time` DESC
    </select>

    <!--查询当前用户第二天7点前是否有打卡记录-->
    <select id="selectBefore7ByUserId" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` WHERE `user_id` = #{userId} AND `type` != 2
        <![CDATA[  and  `check_time` >= #{zero} ]]>
        <![CDATA[  and  `check_time` <= #{seven} ]]>
    </select>

    <!--查询漏打卡考勤记录-->
    <select id="selectForgetSignInList" resultMap="SignInBoMap">
        SELECT *,GROUP_CONCAT(`check_time`) check_time_str FROM `sign_in`
        WHERE `user_id` = #{userId}
        GROUP BY `user_id`,DATE(`check_time`) ORDER BY `check_time` DESC
    </select>

    <!--根据主键查询补打卡申请-->
    <select id="selectResignInById" resultMap="BaseResignInMap">
        SELECT * FROM `resign_in` WHERE `id` = #{id}
    </select>

    <!--个人查询补打卡申请-->
    <select id="selectPersonalResignInPage" resultMap="BaseResignInMap">
        SELECT * FROM `resign_in` WHERE `user_id` = #{userId} AND `review_status` = #{status} ORDER BY `recheck_time` DESC
    </select>

    <!--管理员查询补打卡申请-->
    <select id="selectResignInPage" resultMap="BaseResignInMap">
        SELECT * FROM `resign_in` WHERE `review_status` = #{status} ORDER BY `recheck_time` DESC
    </select>

    <!--根据userId和checkTime查询考勤记录-->
    <select id="selectSignInByUserAndTime" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` WHERE `user_id` = #{userId} AND `check_time` = #{checkTime}
    </select>

    <!--根据userId和checkTime时间段查询考勤记录-->
    <select id="selectSignInByUserAndTimeRange" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` WHERE `user_id` = #{userId}
        <![CDATA[  and  `check_time` >= #{today0} ]]>
        <![CDATA[  and  `check_time` <= #{today23} ]]>
        and type = 0
    </select>

    <!--导入记录的最先一条记录打卡时间-->
    <select id="selectSingInFirstRecord" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` ORDER BY `check_time` ASC LIMIT 1
    </select>

    <!--查询打卡人员列表-->
    <select id="selectCheckInUsers" resultMap="BaseUserMap">
        SELECT * FROM `user` WHERE id in (
        SELECT DISTINCT(user_id) FROM sign_in where
        check_time like "%"#{yearAndMonth}"%"
        )
    </select>

    <!--根据用户id和给定年月查询考勤-->
    <select id="selectPersonalSignInList" resultMap="SignInBoMap">
        SELECT si.*,GROUP_CONCAT(`check_time`) check_time_str FROM `sign_in` si
        LEFT JOIN `user` u on si.user_id = u.id
        <where>
            u.`is_delete` = 0
            <if test="userId != null">
                AND si.`user_id` = #{userId}
            </if>
            <if test="yearAndMonth != null and yearAndMonth != '' ">
                AND si.`check_time` like "%"#{yearAndMonth}"%"
            </if>
        </where>
        GROUP BY `user_id`,DATE(`check_time`) ORDER BY `check_time` DESC
    </select>

    <!--根据月份查询当月有记录的最早时间-->
    <select id="selectMonthFirstTime" resultType="java.util.Date">
        SELECT `check_time` FROM `sign_in` where MONTH(`check_time`) = #{month} ORDER BY `check_time` ASC LIMIT 1
    </select>

    <!--根据月份查询当月有记录的最晚时间-->
    <select id="selectMonthLastTime" resultType="java.util.Date">
        SELECT `check_time` FROM `sign_in` where MONTH(`check_time`) = #{month} ORDER BY `check_time` DESC LIMIT 1
    </select>

    <!--根据月份查询当月有记录的时间集合-->
    <select id="selectDateList" resultType="java.util.Date">
        SELECT check_time FROM sign_in WHERE month(check_time) = #{month} GROUP BY DATE(check_time) ORDER BY check_time ASC
    </select>

    <!--查询有效打卡人员-->
    <select id="selectEffectUsers" resultMap="BaseUserMap">
        select * from `user` where `is_delete` = 0  and `status` = 0 and `job_number` is not null
    </select>

    <!--查询当月所有人的考勤记录-->
    <select id="selectAllSignInByMonth" resultMap="SignInBoMap">
        SELECT si.*,GROUP_CONCAT(`check_time`) check_time_str FROM `sign_in` si
        LEFT JOIN `user` u on si.user_id = u.id
        where u.`is_delete` = 0 and si.check_time like "%"#{yearAndMonth}"%"
        GROUP BY si.`user_id`,DATE(si.`check_time`) ORDER BY si.`check_time` DESC
    </select>

    <!--查询给定年月每天0点到7点之间的考勤记录-->
    <select id="selectAllBetween0And7" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` WHERE  `type` != 2
        <![CDATA[  and  time(check_time) >= '00:00:00' ]]>
        <![CDATA[  and  time(check_time) <= '05:00:00' ]]>
        and check_time like "%"#{yearAndMonth}"%"
    </select>

    <!--给定年月  查询打卡日期集合-->
    <select id="selectDatesByYearAndMonth" resultType="java.util.Date">
        SELECT check_time FROM sign_in WHERE check_time like "%"#{yearAndMonth}"%"
        GROUP BY date(check_time)
    </select>

    <!--根据userId和给定月份查询每天0点到7点之间的数据-->
    <select id="selectAllBetween0And7AndUserId" resultMap="BaseSignInMap">
        SELECT * FROM `sign_in` WHERE  `type` != 2 AND `user_id` = #{userId}
        <![CDATA[  and  time(check_time) >= '00:00:00' ]]>
        <![CDATA[  and  time(check_time) <= '05:00:00' ]]>
        and check_time like "%"#{yearAndMonth}"%"
    </select>

    <!--查询签到时间记录-->
    <select id="selectCheckTimeByUser" resultType="java.util.Date">
        SELECT check_time FROM sign_in
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="beginTime != null">
                <![CDATA[  AND  `check_time` >= #{beginTime} ]]>
            </if>
            <if test="endTime != null">
                <![CDATA[  AND  `check_time` <= #{endTime} ]]>
            </if>
        </where>
        ORDER BY check_time
    </select>

    <!--批量查询打卡情况-->
    <select id="selectBatch" resultType="com.zhixinhuixue.armor.model.pojo.SignIn">
        <foreach collection="queryDTOS" item="item" separator=";">
            SELECT * FROM `sign_in` WHERE `user_id` = #{item.userId}
            <![CDATA[  and  `check_time` >= #{item.beginTime} ]]>
            <![CDATA[  and  `check_time` <= #{item.endTime} ]]>
        </foreach>
    </select>

    <!--查询一天没打卡用户id集合-->
    <select id="selectNotCheckUsers" resultType="java.lang.Long">
        SELECT u.id FROM user u
        LEFT JOIN sign_in sit ON u.id = sit.user_id
        <![CDATA[  and  `check_time` >= #{today0} ]]>
        <![CDATA[  and  `check_time` <= #{today23} ]]>
        WHERE u.is_delete = 0 AND u.`status` = 0 and `check_sort` > 0 AND check_time IS NULL
        GROUP BY u.id;
    </select>

    <!--分页查看原始考勤记录-->
    <select id="selectSignInOriginBOPage" resultMap="SignInOriginMap"
            parameterType="com.zhixinhuixue.armor.model.dto.request.SignInReqDTO">
        SELECT si.*,u.name AS user_name
        FROM `sign_in` si
        LEFT JOIN `user` u ON u.id = si.user_id
        WHERE 1 = 1
        <if test="userId != null">
            AND si.`user_id` = #{userId}
        </if>
        <if test="beginTime != null">
            <![CDATA[  and  si.`check_time` >= #{beginTime} ]]>
        </if>
        <if test="endTime != null">
            <![CDATA[  and  si.`check_time` <= #{endTime} ]]>
        </if>
        ORDER BY si.check_time DESC
    </select>

    <!--根据id查询-->
    <select id="selectSignInById" resultMap="BaseSignInMap">
        SELECT * FROM  `sign_in` WHERE id = #{id}
    </select>

    <!--分页查看原始考勤记录(指定用户)-->
    <select id="selectSignInPageWithUseList" resultMap="SignInBoMap">
        SELECT si.*,GROUP_CONCAT(`check_time`) check_time_str FROM `sign_in` si
        LEFT JOIN `user` u on si.user_id = u.id
        <where>
            u.`is_delete` = 0
            <if test="reqDTO.userIds != null">
                AND si.`user_id` IN
                <foreach collection="reqDTO.userIds" open="(" separator="," close=")" item="item">
                    #{item}
                </foreach>
            </if>
            <if test="reqDTO.beginTime != null">
                <![CDATA[  and  si.`check_time` >= #{reqDTO.beginTime} ]]>
            </if>
            <if test="reqDTO.endTime != null">
                <![CDATA[  and  si.`check_time` <= #{reqDTO.endTime} ]]>
            </if>
        </where>
        GROUP BY `user_id`,DATE(`check_time`) ORDER BY `check_time` DESC
    </select>


    <select id="selectEffectUsersGroup" resultMap="BaseUserMap">
          select * from `user` where `is_delete` = 0  and `status` = 0 and `job_number` is not null
          <if test="userIds != null">
              and id in
              <foreach collection="userIds" open="(" separator="," close=")" item="item">
                  #{item}
              </foreach>
          </if>
    </select>
</mapper>