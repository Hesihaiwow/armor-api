<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhixinhuixue.armor.dao.IZSYFeedbackPlanMapper">
  <resultMap id="BaseResultMap" type="com.zhixinhuixue.armor.model.pojo.FeedbackPlan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="feedback_id" jdbcType="BIGINT" property="feedbackId" />
    <result column="expect_start_time" jdbcType="TIMESTAMP" property="expectStartTime" />
    <result column="expect_official_time" jdbcType="TIMESTAMP" property="expectOfficialTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
      id, feedback_id, expect_start_time, expect_official_time, create_time, update_time
  </sql>

  <resultMap id="ResultMap" type="com.zhixinhuixue.armor.model.bo.FeedbackPlanBO" extends="BaseResultMap">
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <collection property="planTask" column="task_id" select="com.zhixinhuixue.armor.dao.IZSYTaskMapper.selectTaskDetailByTaskId"
                ofType="com.zhixinhuixue.armor.model.bo.TaskDetailBO"></collection>
  </resultMap>

  <resultMap id="PlanMap" type="com.zhixinhuixue.armor.model.bo.FeedbackPlanTaskListBO" extends="BaseResultMap">
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <collection property="planTask" column="id" select="com.zhixinhuixue.armor.dao.IZSYFeedbackPlanTaskMapper.getTaskId"
                ofType="com.zhixinhuixue.armor.model.bo.PlanTaskBO"></collection>
  </resultMap>

  <resultMap id="PlanMap1" type="com.zhixinhuixue.armor.model.bo.FeedbackPlanTaskListBO" extends="BaseResultMap">
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <collection property="planTask" column="{id=id,stage=stage,status=status}" select="com.zhixinhuixue.armor.dao.IZSYFeedbackPlanTaskMapper.getTaskId1"
                ofType="com.zhixinhuixue.armor.model.bo.PlanTaskBO"></collection>
  </resultMap>

  <resultMap id="PlanMap2" type="com.zhixinhuixue.armor.model.bo.FeedbackPlanTaskListBO" extends="BaseResultMap">
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
  </resultMap>

  <resultMap id="ResultMapTask" type="com.zhixinhuixue.armor.model.bo.FeedbackPlanTaskBO" >
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="task_id" jdbcType="BIGINT" property="taskId" />
    <result column="feedback_plan_id" jdbcType="BIGINT" property="feedbackPlanId" />
  </resultMap>

  <insert id="insertFeedbackPlan" parameterType="com.zhixinhuixue.armor.model.pojo.FeedbackPlan">
    insert into feedback_plan ( id, feedback_id, expect_start_time, expect_official_time, create_time, update_time)
    values (#{id,jdbcType=BIGINT}, #{feedbackId,jdbcType=BIGINT}, #{expectStartTime,jdbcType=TIMESTAMP}, #{expectOfficialTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <select id="getFeedbackPlanById" resultMap="ResultMap" parameterType="java.lang.Long">
    SELECT  p.*,t.task_id FROM  feedback_plan_task t
    JOIN  feedback_plan p  on p.id = t.feedback_plan_id
    WHERE p.feedback_id = #{feedbackId}
  </select>

  <select id="selectById" resultMap="BaseResultMap">
      SELECT * FROM feedback_plan WHERE
      id = #{id}
  </select>

  <select id="selectByFeedbackId" resultMap="BaseResultMap">
    SELECT * FROM feedback_plan WHERE
    feedback_id = #{id}
    ORDER BY create_time DESC limit 1
  </select>


  <select id="getFeedbackPlanBySort" resultMap="PlanMap" parameterType="com.zhixinhuixue.armor.model.dto.request.FeedbackPlanListReqDTO">
    SELECT  p.*,  f.origin, f.title
    FROM  feedback_plan p
    JOIN  feedback f ON  p.feedback_id = f.id
    <where>
      f.is_delete = 0
      <if test="startTime!=null">
        <![CDATA[  AND p.expect_official_time >= #{startTime} ]]>
      </if>
      <if test="endTime!=null">
        <![CDATA[ AND p.expect_start_time <= #{endTime} ]]>
      </if>
      <if test="origin!=null and origin!=''">
           AND f.origin = #{origin}
      </if>
    </where>
    <choose>
      <when test="sort!=null and sort !='' and sort==3">
        order by p.expect_official_time DESC
      </when>
      <when test="sort!=null and sort !='' and sort==2">
        order by p.expect_official_time
      </when>
      <otherwise>
        order by p.expect_official_time DESC
      </otherwise>
    </choose>
  </select>

  <select id="getDemandPlanBySort" resultMap="PlanMap" parameterType="com.zhixinhuixue.armor.model.dto.request.DemandPlanQueryReqDTO">
    SELECT  p.*,  f.origin, f.title
    FROM  feedback_plan p
    JOIN  feedback f ON  p.feedback_id = f.id
    <where>
      f.is_delete = 0
      <if test="startTime!=null">
        <![CDATA[  AND p.expect_official_time >= #{startTime} ]]>
      </if>
      <if test="endTime!=null">
        <![CDATA[ AND p.expect_start_time <= #{endTime} ]]>
      </if>
      <if test="origin!=null and origin!=''">
        AND f.origin = #{origin}
      </if>
    </where>
    <choose>
      <when test="sort!=null and sort !='' and sort==3">
        order by p.expect_official_time DESC
      </when>
      <when test="sort!=null and sort !='' and sort==2">
        order by p.expect_official_time
      </when>
      <otherwise>
        order by p.expect_official_time DESC
      </otherwise>
    </choose>
  </select>


  <select id="getTaskIdFromPlan" resultMap="ResultMapTask" parameterType="java.lang.Long">
      SELECT t.feedback_plan_id,t.task_id,f.id FROM feedback_plan_task t
        JOIN feedback_plan p on t.feedback_plan_id=p.id
        JOIN feedback f on p.feedback_id = f .id
         WHERE feedback_plan_id=(
        SELECT feedback_plan_id FROM feedback_plan_task  fpt
        WHERE fpt.task_id=#{taskId})
  </select>


  <update id="updatePlan" parameterType="com.zhixinhuixue.armor.model.pojo.FeedbackPlan">
      UPDATE feedback_plan
    <set >
      <if test="expectStartTime != null" >
        expect_start_time = #{expectStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expectOfficialTime != null" >
        expect_official_time = #{expectOfficialTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <delete id="deleteFeedbackPlan" parameterType="java.lang.Long">
    delete from feedback_plan where feedback_id = #{feedbackId}
  </delete>

  <!-- 根据需求id查到计划id -->
  <select id="getPlansByFeedbackId" resultType="java.lang.Long">
    select id from feedback_plan where feedback_id = #{id} order by create_time asc
  </select>

  <!--获取计划id-->
  <select id="selectPlanById" resultType="java.lang.Long">
    select id from feedback_plan where feedback_id = #{id} limit 1;
  </select>


</mapper>